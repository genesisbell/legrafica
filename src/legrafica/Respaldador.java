/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package legrafica;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author davox
 */
public class Respaldador extends javax.swing.JFrame {

    ArrayList<String> listaBases = new ArrayList<String>();
    ArrayList<String> listaRespaldos = new ArrayList<String>();
    String respaldo;

    /**
     * Creates new form respaldador
     */
    public Respaldador() {
        initComponents();
        this.setLocationRelativeTo(null);
        llenarRespaldos();
    }

    private void llenarRespaldos() {
        try {
            File archivo = new File("respaldos.txt");
            Scanner lector = new Scanner(archivo);
            ArrayList<String> listado = new ArrayList<String>();

            while (lector.hasNext()) {
                String linea = lector.nextLine();
                listado.add(linea);
            }

            listaRespaldos = listado;
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Respaldador.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void respaldador() {
        try {

            Process p = Runtime.getRuntime().exec("C:\\xampp\\mysql\\bin\\mysqldump -u admin -padmin -hlocalhost legrafica");

            new HiloLector(p.getErrorStream()).start();

            InputStream is = p.getInputStream();
            
            DateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
            DateFormat hourFormat = new SimpleDateFormat("HH:mm:ss");
            
            Date date = new Date();
            String hora= hourFormat.format(date);
            String tiempo []= hora.split(":");
            String hour= tiempo[0];
            String min=tiempo[1];
            String sec=tiempo[2];
            String dia= dateFormat.format(date)+" "+hour+"："+min+"："+sec;
            
            String constructo = "respaldo legrafica "+dia+".sql";
            respaldo=constructo;
            FileOutputStream fos = new FileOutputStream(respaldo);

            byte[] buffer = new byte[1000];

            int leido = is.read(buffer);

            while (leido > 0) {
                fos.write(buffer, 0, leido);
                leido = is.read(buffer);
            }

            fos.close();

        } catch (IOException ex) {
            Logger.getLogger(Respaldador.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void restaurador(String respaldo) {
        try {
            Process p = Runtime.getRuntime().exec("C:\\xampp\\mysql\\bin\\mysql -u admin -padmin -hlocalhost legrafica");

            new HiloLector(p.getErrorStream()).start();

            OutputStream os = p.getOutputStream();

            FileInputStream fis = new FileInputStream(respaldo);

            byte[] buffer = new byte[1000];

            int leido = fis.read(buffer);

            while (leido > 0) {
                os.write(buffer, 0, leido);
                leido = fis.read(buffer);
            }
            os.flush();
            os.close();

            fis.close();
        } catch (IOException ex) {
            Logger.getLogger(Respaldador.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void escribirLista(ArrayList<String> listado) {

        try {
            File archivo = new File("respaldos.txt");
            BufferedWriter bw;
            Iterator<String> iterador = listado.iterator();
            bw = new BufferedWriter(new FileWriter(archivo));
            
                while (iterador.hasNext() && !listado.isEmpty()) {

                    bw.write(iterador.next());
                    bw.newLine();

                }

             
            bw.close();
        } catch (IOException ex) {
            Logger.getLogger(Respaldador.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jButton1.setText("Respaldar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jButton2.setText("Restaurar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel1.setText("Prototipo Respaldador");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(103, 103, 103)
                .addComponent(jLabel1)
                .addContainerGap(118, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 113, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(93, 93, 93))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        respaldador();
        listaRespaldos.add(respaldo);
        escribirLista(listaRespaldos);
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
      String respaldoReciente = listaRespaldos.get(listaRespaldos.size()-1);
      restaurador(respaldoReciente); 
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Respaldador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Respaldador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Respaldador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Respaldador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Respaldador().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
