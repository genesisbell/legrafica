/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package legrafica;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author davox
 */
public class FasesAdmin extends javax.swing.JFrame {

    /**
     * Creates new form FasesAdmin
     */
    String nombreTabla;
    DefaultTableModel modelo = new DefaultTableModel();
    public legrafica.Modelos.Proyectos idProyecto;

    public FasesAdmin(legrafica.Modelos.Proyectos parametro) {
        initComponents();
        idProyecto = parametro;
        this.setLocationRelativeTo(null);
        setTitle("Cronograma");
        
        llenarTabla();
        llenarComboBox();
        
        radioPorHacer.setSelected(true);
        btnCancelar.setEnabled(false);
        btnSeleccionar.setEnabled(false);
        btnModificar.setEnabled(false);
    }

    private void llenarTabla() {
        nombreTabla = "proyecto" + idProyecto.getId();
        Connection con = ConnectDB.getConnection();
        Statement consulta = null;
        if (con != null) {
            try {
                consulta = con.createStatement();

                ResultSet rs = consulta.executeQuery("Select * FROM " + nombreTabla);
                modelo.setColumnCount(6);
                modelo.setColumnIdentifiers(new Object[]{"Id", "Etapa", "Fecha Inicio", "Fecha Termino", "Status", "Encargado"});
                while (rs.next()) {

                    modelo.addRow(new Object[]{rs.getInt(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6)});

                }
            } catch (SQLException ex) {
                System.out.println("no se pudo suckker");
                Logger.getLogger(ClientesAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    
       private void llenarComboBox() {

        Connection con = ConnectDB.getConnection();

        try {
            Statement consultaEncargado = con.createStatement();
            ResultSet rsEncargado = consultaEncargado.executeQuery("Select id, usuario FROM admin");

            while (rsEncargado.next()) {
                cbxEncargado.addItem(rsEncargado.getString(2));
            }
            rsEncargado.close();
        } catch (SQLException ex) {
            Logger.getLogger(ClientesAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void limpiarCampos() {
        txtId.setText("");
        txtEtapa.setText("");
        txtFechaInicio.setText("");
        txtFechaTermino.setText("");
        cbxEncargado.setSelectedIndex(0);
        radioPorHacer.setSelected(true);
        while (modelo.getRowCount() > 0) {
            modelo.removeRow(0);
        }
    }
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableFases = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        radioTerminado = new javax.swing.JRadioButton();
        radioProceso = new javax.swing.JRadioButton();
        radioPorHacer = new javax.swing.JRadioButton();
        txtId = new javax.swing.JTextField();
        txtEtapa = new javax.swing.JTextField();
        txtFechaInicio = new javax.swing.JTextField();
        txtFechaTermino = new javax.swing.JTextField();
        btnSeleccionar = new javax.swing.JButton();
        btnCrear = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        btnCancelar = new javax.swing.JButton();
        cbxEncargado = new javax.swing.JComboBox<>();

        tableFases.setModel(modelo);
        tableFases.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableFasesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableFases);

        jLabel1.setText("Etapa");

        jLabel2.setText("Fecha Inicio");

        jLabel3.setText("Fecha Termino");

        jLabel4.setText("Encargado");

        buttonGroup1.add(radioTerminado);
        radioTerminado.setText("Terminado");

        buttonGroup1.add(radioProceso);
        radioProceso.setText("En Proceso");

        buttonGroup1.add(radioPorHacer);
        radioPorHacer.setText("Por Hacer");

        txtId.setEditable(false);
        txtId.setUI(null);
        txtId.setEnabled(false);
        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdActionPerformed(evt);
            }
        });

        txtEtapa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEtapaActionPerformed(evt);
            }
        });

        btnSeleccionar.setText("Seleccionar Etapa");
        btnSeleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarActionPerformed(evt);
            }
        });

        btnCrear.setBackground(new java.awt.Color(0, 153, 255));
        btnCrear.setText("Crear Etapa");
        btnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearActionPerformed(evt);
            }
        });

        btnModificar.setText("Modificar Etapa");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        jLabel6.setText("Estado");

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        cbxEncargado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar Encargado" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 620, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 8, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFechaTermino)
                            .addComponent(txtFechaInicio)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(35, 35, 35))
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cbxEncargado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEtapa, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(radioProceso)
                            .addComponent(radioTerminado)
                            .addComponent(radioPorHacer))
                        .addContainerGap(130, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(200, 200, 200))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnSeleccionar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCrear, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEtapa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel6)
                    .addComponent(radioPorHacer))
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtFechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtFechaTermino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(cbxEncargado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(radioProceso)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radioTerminado)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCrear)
                    .addComponent(btnCancelar)
                    .addComponent(btnModificar)
                    .addComponent(btnSeleccionar))
                .addContainerGap(9, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtEtapaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEtapaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEtapaActionPerformed

    private void btnSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarActionPerformed
        int fila = tableFases.getSelectedRow();
        txtId.setText(Integer.toString((Integer) tableFases.getValueAt(fila, 0)));
        txtEtapa.setText((String) tableFases.getValueAt(fila, 1));
        txtFechaInicio.setText((String) tableFases.getValueAt(fila, 2));
        txtFechaTermino.setText((String) tableFases.getValueAt(fila, 3));
        String estado = ((String) tableFases.getValueAt(fila, 4));
        cbxEncargado.setSelectedItem(tableFases.getValueAt(fila, 5));
        if (estado.equals("terminado")) {
            radioTerminado.setSelected(true);

        }
        if (estado.equals("en_proceso")) {
            radioProceso.setSelected(true);

        }
        if (estado.equals("por_hacer")) {
            radioPorHacer.setSelected(true);

        }

        btnCrear.setEnabled(false);
        btnModificar.setEnabled(true);
        btnCancelar.setEnabled(true);
        

    }//GEN-LAST:event_btnSeleccionarActionPerformed

    private void btnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearActionPerformed
        if (txtEtapa.getText().equals("") || txtFechaInicio.getText().equals("") || txtFechaTermino.getText().equals("")
                || cbxEncargado.getSelectedItem().toString().equals("Seleccionar Encargado")) {
            JDialog frame = new JDialog();
            JOptionPane.showMessageDialog(frame, "Favor de llenar todos los campos para continuar.");
        } else {
            try {
                nombreTabla = "proyecto" + idProyecto.getId();
                Connection con = ConnectDB.getConnection();
                String sql = "INSERT INTO `" + nombreTabla + "` (`id`, `etapa`, `fecha_inicio`, `fecha_termino`, `status`, "
                        + "`encargado`) VALUES (NULL, ?, ?, ?, 'por_hacer', ?);";
                PreparedStatement ps = con.prepareStatement(sql);
                ps.setString(1, txtEtapa.getText());
                ps.setString(2, txtFechaInicio.getText());
                ps.setString(3, (txtFechaTermino.getText()));
                ps.setString(4, cbxEncargado.getSelectedItem().toString());

                ps.executeUpdate();
                limpiarCampos();
                llenarTabla();
            } catch (SQLException ex) {
                Logger.getLogger(ClientesAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
        radioTerminado.setEnabled(false);
        radioProceso.setEnabled(false);
        radioPorHacer.setEnabled(false);
    }//GEN-LAST:event_btnCrearActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        nombreTabla = "proyecto" + idProyecto.getId();
        if (txtEtapa.getText().equals("") || txtFechaInicio.getText().equals("") || txtFechaTermino.getText().equals("")
                || cbxEncargado.getSelectedItem().toString().equals("Seleccionar Encargado")) {
            JDialog frame = new JDialog();
            JOptionPane.showMessageDialog(frame, "Favor de llenar todos los campos para continuar.");
        } else {
            try {
                Connection con = ConnectDB.getConnection();
                String sql = "UPDATE `" + nombreTabla + "` SET `etapa` = ?, `fecha_inicio` = ?, `fecha_termino` = ?, `encargado` = ? WHERE `" + nombreTabla + "`.`id` = ?; ";
                PreparedStatement ps = con.prepareStatement(sql);
                ps.setString(1, txtEtapa.getText());
                ps.setString(2, txtFechaInicio.getText());
                ps.setString(3, (txtFechaTermino.getText()));
                ps.setString(4, (cbxEncargado.getSelectedItem().toString()));
                ps.setString(5, txtId.getText());

                ps.executeUpdate();

            } catch (SQLException ex) {
                Logger.getLogger(ClientesAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (radioTerminado.isSelected() == true) {

            try {
                Connection con = ConnectDB.getConnection();
                String sql = "UPDATE `" + nombreTabla + "` SET `status` = 'terminado' WHERE `" + nombreTabla + "`.`id` = ?; ";
                PreparedStatement ps;
                ps = con.prepareStatement(sql);
                ps.setString(1, txtId.getText());
                ps.executeUpdate();

            } catch (SQLException ex) {
                Logger.getLogger(ClientesAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
        if (radioProceso.isSelected() == true) {

            try {
                Connection con = ConnectDB.getConnection();
                String sql = "UPDATE `" + nombreTabla + "` SET `status` = 'en_proceso' WHERE `" + nombreTabla + "`.`id` = ?; ";
                PreparedStatement ps;
                ps = con.prepareStatement(sql);
                ps.setString(1, txtId.getText());
                ps.executeUpdate();

            } catch (SQLException ex) {
                Logger.getLogger(ClientesAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
        if (radioPorHacer.isSelected() == true) {

            try {
                Connection con = ConnectDB.getConnection();
                String sql = "UPDATE `" + nombreTabla + "` SET `status` = 'por_hacer' WHERE `" + nombreTabla + "`.`id` = ?; ";
                PreparedStatement ps;
                ps = con.prepareStatement(sql);
                ps.setString(1, txtId.getText());
                ps.executeUpdate();

            } catch (SQLException ex) {
                Logger.getLogger(ClientesAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
        limpiarCampos();
        llenarTabla();        
        
        btnCrear.setEnabled(true);
        btnSeleccionar.setEnabled(false);
        btnModificar.setEnabled(false);
        btnCancelar.setEnabled(false);
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        limpiarCampos();
        llenarTabla();
        
        btnCrear.setEnabled(true);
        btnSeleccionar.setEnabled(false);
        btnCancelar.setEnabled(false);
        btnModificar.setEnabled(false);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void tableFasesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableFasesMouseClicked
        btnSeleccionar.setEnabled(true);
    }//GEN-LAST:event_tableFasesMouseClicked

    private void txtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FasesAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FasesAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FasesAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FasesAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new FasesAdmin().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnCrear;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnSeleccionar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbxEncargado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton radioPorHacer;
    private javax.swing.JRadioButton radioProceso;
    private javax.swing.JRadioButton radioTerminado;
    private javax.swing.JTable tableFases;
    private javax.swing.JTextField txtEtapa;
    private javax.swing.JTextField txtFechaInicio;
    private javax.swing.JTextField txtFechaTermino;
    private javax.swing.JTextField txtId;
    // End of variables declaration//GEN-END:variables
}
